{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,IAAIC,EACAC,EACAC,EACAC,EAJSC,SAASC,cAAc,SAM/BC,iBAAiB,UACtB,SAAkBC,GAoBhB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EAEFI,EAAQ,CAAEE,SAAAR,EAAUS,MAAAR,IAGpBM,EAAO,CAAEC,SAAAR,EAAUS,MAAAR,GAAQ,IAK5BS,MAAK,EAACF,SAAEA,EAAUC,MAAAE,MACjBtB,EAAAuB,OAAOC,QAAQ,uBAAqBL,QAAiBG,MAAU,IAEhEG,OAAM,EAACN,SAAEA,EAAUC,MAAAM,MAClB1B,EAAAuB,OAAOI,QAAQ,sBAAoBR,QAAeO,MAAU,G,CArClEjB,EAAImB,iBACJzB,EAASM,EAAIoB,cAAc,GAAGC,MAC9BzB,EAAOI,EAAIoB,cAAc,GAAGC,MAC5B5B,EAAaO,EAAIoB,cAAc,GAAGC,MAClC1B,EAAQ2B,OAAO7B,GAAc6B,OAAO1B,GAEpC2B,YAAW,KACT,IAAK,IAAIC,EAAI,EAAGA,GAAK9B,EAAQ8B,IACjB,IAANA,GACFvB,EAAcuB,EAAGF,OAAO7B,IAE1B8B,YAAW,WACLC,EAAI,GACNvB,EAAcuB,EAAGF,OAAO7B,GAAc6B,OAAO1B,IAAS4B,EAAI,G,GAE3D5B,EAAO4B,E,GAEX/B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nlet firstdelay;\nlet amount;\nlet delay;\nlet step;\n\nform.addEventListener('submit', generate);\nfunction generate(evt) {\n  evt.preventDefault();\n  amount = evt.currentTarget[2].value;\n  step = evt.currentTarget[1].value;\n  firstdelay = evt.currentTarget[0].value;\n  delay = Number(firstdelay) + Number(step);\n\n  setTimeout(() => {\n    for (let i = 1; i <= amount; i++) {\n      if (i === 1) {\n        createPromise(i, Number(firstdelay));\n      }\n      setTimeout(function () {\n        if (i > 1) {\n          createPromise(i, Number(firstdelay) + Number(step) * (i - 1));\n        }\n      }, step * i);\n    }\n  }, firstdelay);\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    const promise = new Promise((fulfill, reject) => {\n      if (shouldResolve) {\n        // Fulfill\n        fulfill({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    });\n\n    promise\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$firstdelay","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","document","querySelector","addEventListener","evt","createPromise","position1","delay1","shouldResolve","Math","random","Promise","fulfill","reject","position","delay","then","delay2","Notify","success","catch","delay3","failure","preventDefault","currentTarget","value","Number","setTimeout","i"],"version":3,"file":"03-promises.5a7bb821.js.map"}