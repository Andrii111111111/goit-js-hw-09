{"mappings":"gfAAA,IAQIA,EACAC,EAEAC,EAXJC,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GAChCL,EAEFI,EAAQ,CAAEE,SAAAR,EAAUS,MAAAR,IAGpBM,EAAO,CAAEC,SAAAR,EAAUS,MAAAR,G,IAKpBS,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUI,EAAKD,EAALF,MACjBZ,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANH,EAAM,M,IAE9DI,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUS,EAAKN,EAALF,MAClBZ,EAAAgB,OAAOK,QAAQ,sBAAqCH,OAAfP,EAAS,QAAYO,OAANE,EAAM,M,IAvCnDE,SAASC,cAAc,SAM/BC,iBAAiB,UACtB,SAAkBC,GAChBA,EAAIC,iBACJ5B,EAAS2B,EAAIE,cAAc,GAAGC,MAC9B7B,EAAO0B,EAAIE,cAAc,GAAGC,MAC5B/B,EAAa4B,EAAIE,cAAc,GAAGC,MAC1BC,OAAOhC,GAAcgC,OAAO9B,GAIpC,IAAK,IAAI+B,EAAI,EAAGA,GAAKhC,EAAQgC,IAC3B5B,EAAc4B,EAAGD,OAAOhC,GAAcgC,OAAO9B,IAAS+B,EAAI,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// const delay = document.querySelector('[name=delay]').valueAsNumber;\n// const step = document.querySelector('[name=step]');\n// const amount = document.querySelector('[name=amount]').valueAsNumber;\n// const btn = document.querySelector('[type=submit]');\n\nconst form = document.querySelector('.form');\nlet firstdelay;\nlet amount;\nlet delay;\nlet step;\n\nform.addEventListener('submit', generate);\nfunction generate(evt) {\n  evt.preventDefault();\n  amount = evt.currentTarget[2].value;\n  step = evt.currentTarget[1].value;\n  firstdelay = evt.currentTarget[0].value;\n  delay = Number(firstdelay) + Number(step);\n\n  // setInterval(() => {}, step);\n  // setTimeout(() => {}, firstdelay);\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, Number(firstdelay) + Number(step) * (i - 1));\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((fulfill, reject) => {\n    if (shouldResolve) {\n      // Fulfill\n      fulfill({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$ce04d3a99e08e73b$var$firstdelay","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$step","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","fulfill","reject","position","delay","then","param","delay2","Notify","success","concat","catch","delay3","failure","document","querySelector","addEventListener","evt","preventDefault","currentTarget","value","Number","i"],"version":3,"file":"03-promises.9803ca0b.js.map"}