{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,gBAAgBC,cACxCF,SAASC,cAAc,eAEvBD,SAASC,cAAc,SAgBpC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAIN,GAEI,IAAIO,SAAQ,SAACC,EAASC,GACpCC,aAAY,WACNR,EAEFM,EAAQ,CAAER,WAAUW,MAAAV,IAGpBQ,EAAO,CAAET,WAAUW,MAAAV,G,MAGtB,KAGAW,MAAK,SAAAC,G,IAAGC,EAAQD,EAARb,SAAUe,EAAKF,EAALF,MACjBlB,EAAAuB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE9DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARb,SAAUoB,EAAKP,EAALF,MAClBlB,EAAAuB,OAAOK,QAAQ,sBAAqCH,OAAfJ,EAAS,QAAYI,OAANE,EAAM,M,IApCpDxB,SAASC,cAAc,iBAI/ByB,iBAAiB,UAErB,SAA0BC,GACxBA,EAAIC,iBACJnB,QAAQC,IAAIiB,GACZE,YAAW,WACT,IAAK,IAAIC,EAAI,EAAGA,GAAKC,OAAQD,IAC3B3B,EAAc2B,EAAG/B,E,GAElB,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delay = document.querySelector('[name=delay]').valueAsNumber;\nconst step = document.querySelector('[name=step]');\n// const amount = document.querySelector('[name=amount]'.valueAsNumber);\nconst form = document.querySelector('.form');\nconst btn = document.querySelector('[type=submit]');\n// const delay = 1500;\n\n// const amount = 5;\nbtn.addEventListener('submit', generateSequence);\n\nfunction generateSequence(evt) {\n  evt.preventDefault();\n  console.log(evt);\n  setTimeout(() => {\n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, delay);\n    }\n  }, 3000);\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(position);\n\n  const promise = new Promise((fulfill, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        // Fulfill\n        fulfill({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    });\n  }, 2000);\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n// createPromise(1, 1500);\n// createPromise(3, 1500);\n// createPromise(5, 1500);\n// createPromise(4, 1500);\n\n// generateSequence(5);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","valueAsNumber","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","console","log","Promise","fulfill","reject","setInterval","delay","then","param","_$position","delay2","Notify","success","concat","catch","delay3","failure","addEventListener","evt","preventDefault","setTimeout","i","amount"],"version":3,"file":"03-promises.88139735.js.map"}